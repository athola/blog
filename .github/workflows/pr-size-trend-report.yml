name: PR Size Trend Report

on:
  schedule:
    # Run daily at 1 AM UTC
    - cron: '0 1 * * *'
  workflow_dispatch:  # Allow manual trigger

# Prevent overlapping trend report generation
concurrency:
  group: pr-size-trend-report
  cancel-in-progress: true

# Minimal permissions for trend report generation
permissions:
  contents: write  # Required for committing trend reports to repository
  issues: write    # Required for creating/updating trend report GitHub issues

# Security hardening
defaults:
  run:
    shell: bash  # Explicit shell specification for security

jobs:
  generate-trend-report:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

    - name: Check if metrics file exists
      id: check-metrics
      run: |
        if [[ -f ".github/metrics/pr-size-history.csv" ]]; then
          echo "metrics-exists=true" >> $GITHUB_OUTPUT
          echo "Found metrics file with $(wc -l < .github/metrics/pr-size-history.csv) entries"
        else
          echo "metrics-exists=false" >> $GITHUB_OUTPUT
          echo "No metrics file found"
        fi

    - name: Install uv
      if: steps.check-metrics.outputs.metrics-exists == 'true'
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "scripts/requirements.txt"

    - name: Set up Python
      if: steps.check-metrics.outputs.metrics-exists == 'true'
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache Python dependencies
      if: steps.check-metrics.outputs.metrics-exists == 'true'
      uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      with:
        path: |
          ~/.cache/uv
          ~/.cache/pip
        key: ${{ runner.os }}-python-${{ hashFiles('scripts/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-python-

    - name: Install Python dependencies
      if: steps.check-metrics.outputs.metrics-exists == 'true'
      run: |
        set -euo pipefail
        
        echo "Installing Python dependencies with caching..."
        # Install dependencies using uv with system-wide installation
        uv pip install --system --no-deps --requirement scripts/requirements.txt || \
        uv pip install --system --requirement scripts/requirements.txt
        
        # Verify installations
        python3 -c "import pandas, numpy, matplotlib, seaborn; print('✅ All dependencies installed successfully')"

    - name: Generate trend visualizations and report
      if: steps.check-metrics.outputs.metrics-exists == 'true'
      run: |
        set -euo pipefail
        
        echo "Generating PR size trend analysis..."
        # Run the Python visualization script
        python3 scripts/visualize_pr_trends.py .github/metrics/pr-size-history.csv
        
        echo "✅ Trend analysis completed"

    - name: Commit and push reports (excluding visualizations)
      if: steps.check-metrics.outputs.metrics-exists == 'true'
      run: |
        set -euo pipefail
        
        # Configure git
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # Commit only the report and metrics (not the visualizations)
        git add .github/reports/pr_size_trend.md
        git commit -m "docs: Update PR size trend report"
        
        # Push the changes
        git push

    - name: Create/update GitHub issue with report
      if: steps.check-metrics.outputs.metrics-exists == 'true'
      uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
      with:
        script: |
          const fs = require('fs');
          
          // Read the report content
          const reportPath = '.github/reports/pr_size_trend.md';
          if (!fs.existsSync(reportPath)) {
            console.log('No trend report found');
            return;
          }
          
          const reportContent = fs.readFileSync(reportPath, 'utf8');
          
          // Search for existing issue
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'pr-size-report'
          });
          
          const reportIssue = issues.data.find(issue => 
            issue.title === 'PR Size Trend Report'
          );
          
          if (reportIssue) {
            // Update existing issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: reportIssue.number,
              body: reportContent
            });
            console.log(`Updated PR size trend report issue #${reportIssue.number}`);
          } else {
            // Create new issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'PR Size Trend Report',
              body: reportContent,
              labels: ['pr-size-report', 'documentation']
            });
            console.log('Created new PR size trend report issue');
          }

    - name: Upload visualization artifacts
      if: steps.check-metrics.outputs.metrics-exists == 'true'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: pr-size-trend-visualizations
        path: .github/reports/visualizations/
        retention-days: 30