
#composite tasks
[tasks.upgrade]
dependencies = ["upgrade-deps", "update"]

# format
[tasks.fmt]
command = "cargo"
args = ["fmt"]
workspace = false

# cleaning
[tasks.clean-state]
script = """
rm hello-*.state
"""

[tasks.clean]
command = "cargo"
args = ["clean"]

# building
[tasks.build]
command = "cargo"
args = ["build", "--workspace"]
workspace = false

[tasks.build-release]
command = "cargo"
args = ["build", "--workspace", "--release"]
workspace = false

[tasks.build-clean]
command = "cargo"
args = ["build", "--workspace"]
dependencies = ["clean"]
workspace = false

# testing
[tasks.test]
command = "cargo"
args = ["nextest", "run", "--workspace"]
workspace = false
dependencies = ["install-test-tools"]

# Test reporting with nextest
[tasks.test-report]
command = "cargo"
args = ["nextest", "run", "--workspace", "--profile", "ci"]
workspace = false
dependencies = ["install-test-tools"]

# Coverage testing
[tasks.test-coverage]
command = "cargo"
args = ["llvm-cov", "nextest", "--workspace", "--lcov", "--output-path", "test-results/coverage/lcov.info"]
workspace = false
dependencies = ["install-test-tools"]

# Coverage with HTML report
[tasks.test-coverage-html]
command = "cargo"
args = ["llvm-cov", "nextest", "--workspace", "--html", "--output-dir", "test-results/coverage/html"]
workspace = false
dependencies = ["install-test-tools"]

# Run specific test groups
[tasks.test-retry]
command = "cargo"
args = ["nextest", "run", "--workspace", "--", "retry"]
workspace = false
dependencies = ["install-test-tools"]

[tasks.test-db]
command = "cargo"
args = ["nextest", "run", "--workspace", "--", "db"]
workspace = false
dependencies = ["install-test-tools"]

[tasks.test-email]
command = "cargo"
args = ["nextest", "run", "--workspace", "--", "email"]
workspace = false
dependencies = ["install-test-tools"]

# Server integration tests
[tasks.test-server]
command = "cargo"
args = ["nextest", "run", "--workspace", "--", "server"]
workspace = false
dependencies = ["install-test-tools"]

# Install test reporting tools
[tasks.install-test-tools]
script = """
if ! command -v cargo-nextest &> /dev/null; then
    echo "Installing cargo-nextest..."
    cargo install cargo-nextest --locked
fi
if ! command -v cargo-llvm-cov &> /dev/null; then
    echo "Installing cargo-llvm-cov..."
    cargo install cargo-llvm-cov --locked
fi
"""

# Clean test artifacts
[tasks.clean-test-artifacts]
script = """
rm -rf test-results/
mkdir -p test-results/{junit,coverage,reports}
"""
workspace = false

# Integration tests for migrations
[tasks.test-migrations]
command = "cargo"
args = ["nextest", "run", "--workspace", "--", "migration"]
workspace = false
dependencies = ["install-test-tools"]

# linting
[tasks.lint]
command = "cargo"
args = ["clippy", "--workspace", "--all-targets", "--all-features", "--", "-D", "warnings"]
workspace = false

[tasks.lint-fix]
command = "cargo"
args = ["clippy", "--workspace", "--fix", "--allow-dirty", "--allow-staged"]
workspace = false

[tasks.bloat]
command = "cargo"
args = ["bloat", "${@}"]
workspace = false

[tasks.leptos]
command = "cargo"
args = ["leptos", "${@}"]
workspace = false

[tasks.machete]
command = "cargo"
args = ["machete"]
workspace = false

[tasks.outdated]
command = "cargo"
args = ["outdated", "--workspace"]
workspace = false

[tasks.security]
command = "cargo"
args = ["audit"]
workspace = false

[tasks.sort]
command = "cargo"
args = ["sort", "--workspace"]
workspace = false

[tasks.spellcheck]
command = "cargo"
args = ["spellcheck", "fix"]
workspace = false

[tasks.udeps]
toolchain = "nightly"
command = "cargo"
args = ["udeps", "--all-targets"]
workspace = false

[tasks.valgrind]
command = "cargo"
args = ["valgrind", "run", "--bin", "server"]
workspace = false

[tasks.cargo-check]
dependencies = [
	"security",
	"bloat",
	"udeps",
]
workspace = false

# dependency management
[tasks.upgrade-deps]
command = "cargo"
args = ["upgrade", "--workspace"]
workspace = false

[tasks.update]
command = "cargo"
args = ["update"]
workspace = false

# rebuild
[tasks.rebuild]
dependencies = [
	"fmt",
	"build",
	"test"
]
workspace = false

[tasks.rebuild-clean]
dependencies = [
	"fmt",
	"build-clean",
	"test"
]
workspace = false
