[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["scripts"]

[project]
name = "blog-pr-metrics"
version = "0.1.0"
description = "PR size metrics visualization for the blog project"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    # Core data processing
    "pandas>=1.3.0,<3.0.0",
    "numpy>=1.21.0,<2.0.0",
    
    # Visualization libraries  
    "matplotlib>=3.5.0,<4.0.0",
    "seaborn>=0.11.0,<1.0.0",
    
    # Configuration and data validation
    "PyYAML>=6.0",
]

[project.optional-dependencies]
test = [
    # Testing framework
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.0.0",
    
    # Test utilities
    "coverage>=7.0.0",
]

dev = [
    # Code quality
    "black>=23.0.0",
    "flake8>=6.0.0",
    "ruff>=0.1.0",
    "pylint>=3.0.0",
    "pydocstyle>=6.0.0",
    "pycodestyle>=2.11.0",
    
    # All test dependencies
    "blog-pr-metrics[test]",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--color=yes",
    "--durations=10",
]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (slower, multiple components)",
    "slow: Slow tests (for CI/CD exclusion during development)",
    "acceptance: Acceptance tests (end-to-end behavior)",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["scripts"]
omit = [
    "tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pylint.messages_control]
max-line-length = 100

[tool.pylint.format]
max-line-length = 100

[tool.pycodestyle]
max-line-length = 100

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
]
line-length = 100
target-version = "py310"

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pydocstyle]
convention = "google"

